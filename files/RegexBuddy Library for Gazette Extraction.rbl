<?xml version="1.0" encoding="UTF-8"?>
<rxb:regexbuddy xmlns:rxb="http://www.regexbuddy.com/regexbuddy46.xsd" version="4.6">
	<libraryfile>
		<action id="RemoveIntro" testscope="page">
			<flavor>
				<builtin>pcre836</builtin>
			</flavor>
			<regex>(?xsm)&#13;&#10;(?(DEFINE)(?&lt;bracketed_digit>\([1-5]\)))&#13;&#10;(?>\A.*?BYLAE)&#13;&#10;(?>(?!(?&amp;bracketed_digit)).)*\(1\)&#13;&#10;(?>(?!(?&amp;bracketed_digit)).)*\(2\)&#13;&#10;(?>(?!(?&amp;bracketed_digit)).)*\(3\)&#13;&#10;(?>(?!(?&amp;bracketed_digit)).)*\(4\)&#13;&#10;(?>(?!(?&amp;bracketed_digit)).)*\(5\)&#13;&#10;.*?&#13;&#10;^$\s*</regex>
			<description>Remove Intro</description>
			<testdata format="win1252"></testdata>
		</action>
		<action id="SimpleMatch" testscope="page">
			<flavor>
				<builtin>phppreg7004</builtin>
			</flavor>
			<regex>(?xsm)&#13;&#10;(?(DEFINE)(?&lt;bracketed_digit>\([1-5]\)))&#13;&#10;(?>\A.*?BYLAE)&#13;&#10;(?>(?!(?&amp;bracketed_digit)).)*\(1\)&#13;&#10;(?>(?!(?&amp;bracketed_digit)).)*\(2\)&#13;&#10;(?>(?!(?&amp;bracketed_digit)).)*\(3\)&#13;&#10;(?>(?!(?&amp;bracketed_digit)).)*\(4\)&#13;&#10;(?>(?!(?&amp;bracketed_digit)).)*\(5\)&#13;&#10;.*?&#13;&#10;^$\s*</regex>
			<description>Simple Match</description>
			<testdata format="win1252"></testdata>
		</action>
	</libraryfile>
</rxb:regexbuddy>
